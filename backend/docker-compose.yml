version: '3'

networks:
  keycloak-net:
    driver: bridge
  oauth2proxy-net:
    driver: bridge

volumes:
  keycloak_postgres_volume:

services:
  oauth2proxy:
    container_name:
      oauth2proxy
    image:
      quay.io/oauth2-proxy/oauth2-proxy:v7.5.1
    env_file:
      oauth2proxy/.env
    volumes:
      - ./oauth2proxy/oauth2proxy.cfg:/oauth2proxy.cfg
    command:
      --config /oauth2proxy.cfg
    networks:
      - oauth2proxy-net
    ports:
      - "4180:4180"
    depends_on:
      keycloak:
        condition: service_healthy

  # nginx:
  #   container_name:
  #     nginx
  #   image:
  #     nginx:1.23.3-alpine
  #   volumes:
  #     - ./nginx/localhost.conf:/etc/nginx/nginx.conf
  #     - ./nginx/certs/localhost/localhost.crt:/etc/nginx/ssl/localhost/localhost.crt
  #     - ./nginx/certs/localhost/localhost.key:/etc/nginx/ssl/localhost/localhost.key
  #   networks:
  #     - keycloaknet
  #   ports:
  #     - "80:80"
  #     - "443:443"

  keycloak:
    container_name:
      keycloak
    image:
      keycloak/keycloak
    command:
      start-dev --import-realm
    env_file:
      keycloak/.env
    volumes:
      - ./keycloak/realm:/opt/keycloak/data/import
    networks:
      - keycloak-net
      - oauth2proxy-net
    ports:
      - "8081:8080"
    hostname: 
      keycloak
    depends_on:
      keycloak_postgres:
        condition: service_healthy
    healthcheck:
      test: curl --head -fsS http://localhost:8080/health/live
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s

  keycloak_postgres:
    container_name:
      keycloak_postgres
    image: 
      postgres:14.10-bullseye
    command: 
      postgres -c 'max_connections=200'
    volumes:
      - keycloak_postgres_volume:/var/lib/postgresql/data
    env_file:
      keycloak_postgres/.env
    networks:
      - keycloak-net
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -d postgres
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
